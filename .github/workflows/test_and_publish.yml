# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: flash1 v1-client ci

on:
  push:
    branches:
      - "master"
      - "push-action/**"
  pull_request:
    branches:
      - "master"
env:
  AWS_REGION : ap-northeast-1
permissions:
      id-token: write
      contents: write    # This is required for actions/checkout
      pull-requests: write
      issues: write
      repository-projects: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v2.2.0
      with:
        node-version: 16.13.2
        cache: 'npm'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn
    - run: yarn build
    - run: yarn test
  publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 16.13.2
          cache: 'npm'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: authenticate with 'npm'
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: build package
        run: yarn && yarn build
      - name: add tags
        run: ./scripts/publish_if_not_exists.sh
      - name: Push tags
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.PAT }}
          branch: master
          tags: true
      - name: publish to 'npm'
        run: yarn publish --access public

    
